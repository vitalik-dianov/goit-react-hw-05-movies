{"version":3,"file":"static/js/278.dc169532.chunk.js","mappings":"4PA8DA,UAxDe,WACb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAIIC,EAAAA,EAAAA,MAHFC,EADF,EACEA,aACAC,EAFF,EAEEA,SACaC,EAHf,EAGEC,UAAaD,OAETE,GAAWC,EAAAA,EAAAA,MAoBjB,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAKZ,EAAaa,IAAI,SAGtB,IACE,IAAMC,EAAY,mCAAG,oGACAC,EAAAA,GAAoBf,EAAaa,IAAI,UADrC,UACbG,EADa,wDAKnBZ,EAASY,GALU,2CAAH,qDAOlBF,GAGD,CAFC,MAAOG,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACjB,KAGF,iCACE,kBAAMoB,SAAUd,GArBH,SAAC,GAAD,IAAGe,EAAH,EAAGA,WAAH,OAAoBpB,EAAgB,CAAEqB,MAAOD,GAA7C,IAqBb,WACE,oCACMd,EAAS,aAAc,CAAEgB,UAAU,KADzC,IAEEC,aAAa,MAEdhB,EAAOa,aAAc,sDACtB,kBAAOI,KAAK,eAGd,wBACGtB,EAAMuB,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAK,GAAD,OAAKrB,EAASsB,UAAd,OAAyBtB,EAASuB,SAFjD,SAIGN,EAAKO,SALDP,EAAKE,GASjB,QAIR,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport * as movieAPI from 'services/movieAPI';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [found, setFound] = useState([]);\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm();\n  const location = useLocation();\n  const onSubmit = ({ inputQuery }) => setSearchParams({ query: inputQuery });\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n    try {\n      const fetchOnQuery = async () => {\n        const data = await movieAPI.getOnQuery(searchParams.get('query'));\n        if (!data) {\n          return;\n        }\n        setFound(data);\n      };\n      fetchOnQuery();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          {...register('inputQuery', { required: true })}\n          defaultValue=\"\"\n        />\n        {errors.inputQuery && <span>This field is required</span>}\n        <input type=\"submit\" />\n      </form>\n\n      <ul>\n        {found.map(film => {\n          return (\n            <li key={film.id}>\n              <Link\n                to={`/movies/${film.id}`}\n                state={{ from: `${location.pathname}${location.search}` }}\n              >\n                {film.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","found","setFound","useForm","handleSubmit","register","errors","formState","location","useLocation","useEffect","get","fetchOnQuery","movieAPI","data","error","console","log","onSubmit","inputQuery","query","required","defaultValue","type","map","film","to","id","state","from","pathname","search","title"],"sourceRoot":""}