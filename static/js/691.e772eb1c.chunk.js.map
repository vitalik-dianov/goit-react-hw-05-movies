{"version":3,"file":"static/js/691.e772eb1c.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[5]};\n  justify-content: space-between;\n`;\nexport const FilmItem = styled.li`\n  gap: ${p => p.theme.space[3]};\n`;\nexport const FilmLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  text-decoration: none;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.text};\n\n  &:hover {\n    color: ${p => p.theme.colors.red};\n  }\n`;\nexport const FilmImage = styled.img`\n  width: ${p => p.theme.sizes[5]};\n  max-height: ${p => p.theme.sizes[8]};\n  object-fit: cover;\n`;\nexport const FilmTitle = styled.p`\n  word-wrap: break-word;\n  width: ${p => p.theme.sizes[5]};\n`;\n\nexport const SearchForm = styled.form`\n  margin-top: ${p => p.theme.space[4]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.space[6]};\n`;\nexport const SearchInput = styled.input`\n  height: ${p => p.theme.sizes[2]};\n  font-size: ${p => p.theme.fontSizes.m};\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.md};\n\n  box-shadow: ${p => p.theme.shadows.all};\n\n  padding: 0 ${p => p.theme.space[3]};\n\n  &:focus {\n  }\n`;\n\nexport const SearchBtn = styled.input`\n  height: ${p => p.theme.sizes[2]};\n  font-size: ${p => p.theme.fontSizes.m};\n  box-shadow: ${p => p.theme.shadows.all};\n  border-radius: ${p => p.theme.radii.md};\n  border: ${p => p.theme.borders.none};\n`;\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport * as movieAPI from 'services/movieAPI';\nimport { Box } from 'services/Box';\nimport {\n  FilmImage,\n  FilmItem,\n  FilmLink,\n  FilmList,\n  FilmTitle,\n  SearchBtn,\n  SearchForm,\n  SearchInput,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [found, setFound] = useState([]);\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm();\n  const location = useLocation();\n  const onSubmit = ({ inputQuery }) => setSearchParams({ query: inputQuery });\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n    try {\n      const fetchOnQuery = async () => {\n        const data = await movieAPI.getOnQuery(searchParams.get('query'));\n        if (!data) {\n          return;\n        }\n        setFound(data);\n      };\n      fetchOnQuery();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [searchParams]);\n\n  return (\n    <Box minWidth={8} maxWidth={10} pb={4} pl={7} pr={7} mr=\"auto\" ml=\"auto\">\n      <SearchForm onSubmit={handleSubmit(onSubmit)}>\n        <SearchInput\n          {...register('inputQuery', { required: true })}\n          defaultValue=\"\"\n        />\n        {errors.inputQuery && <span>This field is required</span>}\n        <SearchBtn type=\"submit\" value=\"SEARCH\" />\n      </SearchForm>\n\n      <FilmList>\n        {found.map(film => {\n          return (\n            <FilmItem key={film.id}>\n              <FilmLink\n                to={`/movies/${film.id}`}\n                state={{ from: `${location.pathname}${location.search}` }}\n              >\n                <FilmImage\n                  src={`https://image.tmdb.org/t/p/original/${film.poster_path}`}\n                  alt=\"\"\n                />\n                <FilmTitle>{film.title}</FilmTitle>\n              </FilmLink>\n            </FilmItem>\n          );\n        })}\n      </FilmList>\n    </Box>\n  );\n};\nexport default Movies;\n"],"names":["FilmList","styled","p","theme","space","FilmItem","FilmLink","Link","fontSizes","m","fontWeights","bold","colors","text","red","FilmImage","sizes","FilmTitle","SearchForm","SearchInput","borders","none","radii","md","shadows","all","SearchBtn","useSearchParams","searchParams","setSearchParams","useState","found","setFound","useForm","handleSubmit","register","errors","formState","location","useLocation","useEffect","get","fetchOnQuery","movieAPI","data","error","console","log","Box","minWidth","maxWidth","pb","pl","pr","mr","ml","onSubmit","inputQuery","query","required","defaultValue","type","value","map","film","to","id","state","from","pathname","search","src","poster_path","alt","title"],"sourceRoot":""}